#!/bin/bash
# Initial script to convert existing OS installation into an OLPC XS.
# Configures fundamental XS items.
# Usage: xs-setup [hostname]

set -x -e -u
SYSTEMD=1

DESTDIR=/
CFGDIR=/usr/share/xs-config/cfg
MARKER=/.olpcxs-configured

# Parse options
opt_upgrade_only=
if ! options=$(getopt -o u -l upgrade-only -- "$@"); then
	exit 1
fi

eval set -- $options
while [ $# -gt 0 ]; do
	case $1 in
		-u|--upgrade-only) opt_upgrade_only=1 ;;
		(--) shift; break;;
		(-*) echo "$0: error - unrecognized option $1" >&2; exit 1;;
		(*) break;;
	esac
	shift
done

# The user can request that we only perform setup steps if setup had been
# previously performed by an admin. This is useful for automated upgrades
# (e.g. RPM post scripts).
if [ -n "$opt_upgrade_only" -a ! -e "$MARKER" ]; then
	echo "$0: doing nothing, XS is not active."
	exit 0
fi


# seed low-level network conf and domain
xs-domain-config $1



#systemd change
echo '-y' > /fsckoptions
# enable no-fsck-questions
#chkconfig --add no-fsck-questions

# beginning of interface with setup functions
#
# for testing, let's load all the available options
source /usr/bin/xs-setup-functions
do-first
set-etckeeper yes
yum-etckeeper yes
#turn off the etckeeper to speed things up
yum-etckeeper no
set-etckeeper no
manpages yes
mlocate yes
dhcpd yes
named yes
ejabberd yes

#for normal use, choose either of the following (gateway turns on masquerade)
squid yes
gateway yes

httpd yes
vnc yes
webdav yes
idmgr yes
postgresql yes
moodle-xs yes
xs-security yes
yum-etckeeper yes
do-last